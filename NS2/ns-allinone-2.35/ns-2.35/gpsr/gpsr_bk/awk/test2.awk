####################################################################
#         You can run awk file based on tr file generated by simulations.
#Here is awk script for old trace format. It contains all the parameters calculations.
#http://dgr8swativekariya.wordpress.com/2012/02/02/to-run-awk-file/
####################################################################
BEGIN {
	sends=0;
	recvs=0;
	routing_packets=0.0;
	droppedBytes=0;
	droppedPackets=0;
	highest_packet_id =0;
	sum=0;
	recvnum=0;
}

{
	time = $3;
	packet_id = $41;
	
	# CALCULATE PACKET DELIVERY FRACTION
	if (( $1 == "s") &&  ( $7 == "cbr" ) && ( $4=="AGT" )) {  sends++; }
	if (( $1 == "r") &&  ( $7 == "cbr" ) && ( $4=="AGT" ))   {  recvs++; }

	# CALCULATE DELAY
	if ( start_time[packet_id] == 0 ){
		start_time[packet_id] = time;
		printf("start time %d\n",start_time[packet_id]);
		#printf("packet ID: %d\n"packet_id);
}


	if (( $1 == "r") &&  ( $7 == "cbr" ) && ( $4=="AGT" )) {  
		end_time[packet_id] = time; 
		#printf("end time %f\n",end_time[packet_id]);

 }
	else {  end_time[packet_id] = -1;  }

	# CALCULATE TOTAL AODV OVERHEAD
	#if (($1 == "s" || $1 == "f") && $4 == "RTR" && $7 =="AODV") routing_packets++;
	if (($1 == "s" || $1 == "f") && $4 == "RTR" && $7 =="gpsr") routing_packets++;

	# DROPPED AODV PACKETS
	if (( $1 == "D" ) && ( $7 == "cbr" ))
	{
		droppedPackets=droppedPackets+1;
	}

	#find the number of packets in the simulation
	if (packet_id > highest_packet_id)
		highest_packet_id = packet_id;

}

END {
	for ( i in end_time )
	{
		start = start_time[i];
		end = end_time[i];
		packet_duration = end - start;
		if ( packet_duration > 0 )
		{    
			sum += packet_duration;
			recvnum++;

		}
	}

	delay=sum/recvnum;
	#NRL = routing_packets/recvs;  #normalized routing load
	PDF = (recvs/sends)*100;  #packet delivery ratio[fraction]
	
	printf("send = %.2f\n",sends);
	printf("recv = %.2f\n",recvs);
	printf("routingpkts = %.2f\n",routing_packets++);
	printf("PDF = %.3f\n",PDF);
	#printf("NRL = %.2f\n",NRL);
	printf("sum= %d\n",sum);
	printf("recvnum= %d\n",recvnum);
	printf("start = %d\n",start);
	printf("end = %d\n",end);
	printf("Average e-e delay(ms)= %.2f\n",delay*1000);
	printf("No. of dropped data (packets) = %d\n",droppedPackets);

}
